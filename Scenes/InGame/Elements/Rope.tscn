[gd_scene load_steps=6 format=2]

[ext_resource path="res://Assets/icon.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

export (float) var half_limit_in_degrees = 80
export (bool) var debug = false
export (float) var length_in_pixels = 100
export (float) var resolution_step = 20

onready var _half_limit_in_rads = deg2rad(half_limit_in_degrees)
var _swing_direction = 1
var _velocity = 0
var _current_length

var _climbing = false

func on_rope_handled(velocity : Vector2, position : Vector2):
	_velocity = velocity

func _on_climb():
	_climbing = true
	
func _climb_up(position : Vector2, velocity : Vector2) -> Vector2:
	return velocity
	
func _climb_down(position : Vector2, velocity : Vector2) -> Vector2:
	return -velocity

func _ready():
	$Line2D.initialize(resolution_step, length_in_pixels)
	_current_length = $Line2D.get_length()

func _get_angular_velocity(delta) -> float :
	return _velocity * _swing_direction * delta 

func _angle_with_vertical(direction : Vector2) -> float:
	return Vector2.DOWN.angle_to(direction)

func on_balanced(velocity : Vector2, mass : float):
	_swinging = true
	_swing_direction = sign(velocity.x)
	_velocity = abs(velocity.x)
	
func on_unbalanced():
	_swinging = false
	var direction = $Line2D.get_direction()
	var angle = _angle_with_vertical(direction)
	if (_swing_direction > 0 and angle > 0) or (_swing_direction < 0 and angle < 0) :
		_swing_direction *= -1

var _swinging = false

func unswing(delta):
	var direction = $Line2D.get_direction()
	var angle = _angle_with_vertical(direction)
	var angular_velocity = _get_angular_velocity(delta)
	
	if angle == 0:
		return
		
	if sign(angle + angular_velocity) != sign(angle):
		_velocity = 0
		angle = 0
	else:
		angle += angular_velocity
	
	direction = Vector2.DOWN.rotated(angle)
	var new_position = $Line2D.get_point_position(1) + direction * _current_length
	$Line2D.update_position(new_position)
	
func swing(delta : float, velocity : Vector2):
	var direction = $Line2D.get_direction()
	var angle = _angle_with_vertical(direction)
	angle += _get_angular_velocity(delta)
	
	if abs(angle) > _half_limit_in_rads:
		var offset = abs(angle) - _half_limit_in_rads
		angle = _swing_direction * (_half_limit_in_rads - offset)
		_swing_direction *= -1
	
	direction = Vector2.DOWN.rotated(angle)
	
	var new_position = $Line2D.get_point_position(1) + direction * _current_length
	$Line2D.update_position(new_position)
"

[sub_resource type="GDScript" id=2]
script/source = "extends Line2D

func last_point():
	return get_point_count() - 1

func get_direction() -> Vector2:
	return get_point_position(0).direction_to(get_point_position(last_point()))
	
func get_length() -> float:
	return get_point_position(0).distance_to(get_point_position(last_point()))
	
func initialize(resolution_step : float, length : float):
	set_point_position(0, Vector2.ZERO)
	set_point_position(last_point(), Vector2(0, length))
	var current_step = resolution_step
	var position_index = 1
	while current_step*position_index < length:
		add_point(Vector2(0, current_step*position_index), position_index)
		position_index+=1
		
func update_position(position : Vector2):
	set_point_position(last_point(), position)
"

[sub_resource type="GDScript" id=4]
script/source = "extends Area2D

func get_root_scene():
	return get_parent()
# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="SegmentShape2D" id=3]
b = Vector2( 0, 196.412 )

[node name="Rope" type="Node2D" groups=[
"Ropes",
]]
position = Vector2( 147.043, 30.5871 )
script = SubResource( 1 )

[node name="Line2D" type="Line2D" parent="."]
points = PoolVector2Array( 0, 196.319, 0, 0 )
default_color = Color( 0.870588, 0.34902, 0.121569, 1 )
script = SubResource( 2 )

[node name="icon" type="Sprite" parent="."]
visible = false
position = Vector2( -0.977013, 194.917 )
texture = ExtResource( 1 )

[node name="Area2D" type="Area2D" parent="."]
monitoring = false
collision_layer = 8
collision_mask = 0
script = SubResource( 4 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 3 )
