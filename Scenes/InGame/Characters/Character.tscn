[gd_scene load_steps=8 format=2]

[ext_resource path="res://Assets/icon.png" type="Texture" id=1]
[ext_resource path="res://Scripts/StateMachine.gd" type="Script" id=2]

[sub_resource type="GDScript" id=1]
resource_name = "Normal"
script/source = "extends Node

var fsm: StateMachine

export (Vector2) var jump_impulse= Vector2(0, -300)
export (Vector2) var speed= Vector2(200,0)
export (float) var gravity_scale = 5

onready var CrateDetectorRight : RayCast2D = get_parent().get_parent().find_node(\"CrateDetectorRight\", false)
onready var CrateDetectorLeft : RayCast2D = get_parent().get_parent().find_node(\"CrateDetectorLeft\", false)
onready var center: Area2D = get_parent().get_parent().find_node(\"Area2D\", false)

var platform_detector

func enter(args : Array):
	platform_detector = fsm.player.find_node(\"PlatformDetector\")

func physics_process(delta):
	var snap = platform_detector.cast_to
	if Input.is_action_just_pressed(\"ui_select\") and platform_detector.is_colliding():
		snap = Vector2.ZERO
		fsm.velocity.y= jump_impulse.y
	
	if Input.is_action_just_released(\"ui_select\"):
		fsm.velocity.y *= 0.7 

	if Input.is_action_pressed(\"ui_right\"):
		fsm.velocity.x = speed.x

	elif Input.is_action_pressed(\"ui_left\"):
		fsm.velocity.x= -speed.x
		
	else:
		fsm.velocity.x=0
	
	if  platform_detector.is_colliding():
		if CrateDetectorRight.is_colliding():
			var object = CrateDetectorRight.get_collider()
			if object.is_in_group(\"Boxes\") and fsm.velocity.x > 0:
				object.push(fsm.velocity / 10.0)

		if CrateDetectorLeft.is_colliding():
			var object = CrateDetectorLeft.get_collider()
			if object.is_in_group(\"Boxes\")  and fsm.velocity.x < 0:
				object.push(fsm.velocity / 10.0)
		
	for area in center.get_overlapping_areas():
		if area.get_parent().is_in_group(\"Ladders\") and (Input.is_action_just_pressed(\"ui_up\") or Input.is_action_just_pressed(\"ui_down\")):
			fsm.change_to(\"ClimbingLadder\", [area])
		
	var gravity= Vector2(0,98)
	fsm.velocity += gravity * delta * gravity_scale
	fsm.velocity = fsm.player.move_and_slide_with_snap(fsm.velocity, snap, Vector2.ZERO,true,4,0.9)

func _on_Area2D_area_entered(area):
	if area.is_in_group(\"Ropes\"):
		Events.emit_signal(\"rope_handled\", fsm.player.velocity)
		fsm.change_to(\"ClimbingRope\", [])
"

[sub_resource type="GDScript" id=2]
resource_name = "Climbing"
script/source = "extends Node

var fsm: StateMachine

var _climbing_velocity = Vector2(0, 30)
var _rope : Node2D

func enter_state(args : Array):
	pass

func physics_process(delta):
	var velocity = get_parent().get_velocity()
	if Input.is_action_just_pressed(\"ui_up\"):
		get_parent().set_velocity(velocity - _climbing_velocity)
	if Input.is_action_just_pressed(\"ui_down\"):
		get_parent().set_velocity(velocity + _climbing_velocity)
		
	if Input.is_action_just_pressed(\"ui_right\") or Input.is_action_just_pressed(\"ui_left\"):
		fsm.change_to(\"SwingingRope\", [])
"

[sub_resource type="GDScript" id=6]
resource_name = "ClimbingLadder"
script/source = "extends Node

var fsm: StateMachine

var _climbing_velocity = Vector2(0, 30)
var jump_impulse= Vector2(0, -300)
var speed= Vector2(200,0)
var _ladder_area : Area2D


func enter(args : Array):
	fsm.velocity.x = 0
	_ladder_area = args[0]

func physics_process(delta):
	if Input.is_action_just_pressed(\"ui_select\"):
		fsm.velocity.y= jump_impulse.y
	
	var velocity = fsm.velocity
	if Input.is_action_pressed(\"ui_up\"):
		fsm.velocity -= _climbing_velocity
	elif Input.is_action_pressed(\"ui_down\"):
		fsm.velocity += _climbing_velocity
	
	if Input.is_action_pressed(\"ui_right\"):
		fsm.velocity.x = speed.x

	elif Input.is_action_pressed(\"ui_left\"):
		fsm.velocity.x= speed.x
		
	else:
		fsm.velocity.x=0
		
	fsm.velocity = fsm.player.move_and_slide(fsm.velocity)
	fsm.velocity.y = 0

func _on_Area2D_area_exited(area):
	if area == _ladder_area:
		fsm.change_to(\"Normal\", [])
"

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 32.7783, 32.2322 )

[sub_resource type="CircleShape2D" id=5]
radius = 4.3984

[node name="Character" type="KinematicBody2D"]

[node name="States" type="Node" parent="."]
script = ExtResource( 2 )

[node name="Normal" type="Node" parent="States"]
script = SubResource( 1 )

[node name="ClimbingRope" type="Node" parent="States"]
script = SubResource( 2 )

[node name="ClimbingLadder" type="Node" parent="States"]
script = SubResource( 6 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 4 )

[node name="PlatformDetector" type="RayCast2D" parent="."]
enabled = true

[node name="CrateDetectorRight" type="RayCast2D" parent="."]
enabled = true
cast_to = Vector2( 50, 0 )

[node name="CrateDetectorLeft" type="RayCast2D" parent="."]
enabled = true
cast_to = Vector2( -50, 0 )

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 5 )

[connection signal="area_entered" from="Area2D" to="States/Normal" method="_on_Area2D_area_entered"]
[connection signal="area_exited" from="Area2D" to="States/ClimbingLadder" method="_on_Area2D_area_exited"]
