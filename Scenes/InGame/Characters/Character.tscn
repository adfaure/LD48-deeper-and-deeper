[gd_scene load_steps=7 format=2]

[ext_resource path="res://Assets/icon.png" type="Texture" id=1]
[ext_resource path="res://Scripts/StateMachine.gd" type="Script" id=2]

[sub_resource type="GDScript" id=1]
resource_name = "Normal"
script/source = "extends Node

var fsm: StateMachine

export (Vector2) var jump_impulse= Vector2(0, -300)
export (Vector2) var speed= Vector2(200,0)
export (float) var gravity_scale = 5

onready var CrateDetectorRight : RayCast2D = get_parent().get_parent().find_node(\"CrateDetectorRight\", false)
onready var CrateDetectorLeft : RayCast2D = get_parent().get_parent().find_node(\"CrateDetectorLeft\", false)

var platform_detector

func enter(args : Array):
	platform_detector = fsm.player.find_node(\"PlatformDetector\")

func physics_process(delta):
	var snap = platform_detector.cast_to
	if Input.is_action_just_pressed(\"ui_select\") and platform_detector.is_colliding():
		snap = Vector2.ZERO
		fsm.velocity.y= jump_impulse.y
	
	if Input.is_action_just_released(\"ui_select\"):
		fsm.velocity.y *= 0.7 

	if Input.is_action_pressed(\"ui_right\"):
		fsm.velocity.x = speed.x

	elif Input.is_action_pressed(\"ui_left\"):
		fsm.velocity.x= -speed.x
		
	else:
		fsm.velocity.x=0
		

		
	var gravity= Vector2(0,98)
	fsm.velocity += gravity * delta * gravity_scale
	fsm.velocity = fsm.player.move_and_slide_with_snap(fsm.velocity, snap, Vector2.ZERO,true,4,0.9)


func resolve_collisions():
	if CrateDetectorRight.is_colliding():
		var object = CrateDetectorRight.get_collider()
		if object.is_in_group(\"Boxes\") and fsm.velocity.x > 0:
				object.push(fsm.velocity / 10.0)

	if CrateDetectorLeft.is_colliding():
		var object = CrateDetectorLeft.get_collider()
		if object.is_in_group(\"Boxes\")  and fsm.velocity.x < 0:
			object.push(fsm.velocity / 10.0)
			
	if 

func _on_Area2D_area_entered(area):
	if area.get_root_scene().is_in_group(\"Ropes\"):
		Events.emit_signal(\"rope_handled\", fsm.velocity)
		fsm.change_to(\"ClimbingRope\", [area.get_root_scene()])
"

[sub_resource type="GDScript" id=2]
resource_name = "Climbing"
script/source = "extends Node

var fsm: StateMachine

var _climbing_velocity = Vector2(0, 30)
var _rope : Node2D

func enter(args : Array):
	fsm.velocity = Vector2.ZERO
	_rope = args[0]

func physics_process(delta):
	if Input.is_action_pressed(\"ui_up\"):
		fsm.velocity -= _climbing_velocity
	if Input.is_action_pressed(\"ui_down\"):
		fsm.velocity += _climbing_velocity
		
	fsm.player.move_and_slide(fsm.velocity)
	
	fsm.velocity.y = 0
		
	if Input.is_action_just_pressed(\"ui_select\"):
		fsm.change_to(\"Normal\", [])
	
"

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 32.7783, 32.2322 )

[sub_resource type="CircleShape2D" id=4]
radius = 4.3984

[node name="Character" type="KinematicBody2D"]

[node name="States" type="Node" parent="."]
script = ExtResource( 2 )

[node name="Normal" type="Node" parent="States"]
script = SubResource( 1 )
jump_impulse = null
speed = null
gravity_scale = null

[node name="ClimbingRope" type="Node" parent="States"]
script = SubResource( 2 )

[node name="Ropethrowing" type="Node" parent="States"]

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 3 )

[node name="PlatformDetector" type="RayCast2D" parent="."]
enabled = true

[node name="CrateDetectorRight" type="RayCast2D" parent="."]
enabled = true
cast_to = Vector2( 50, 0 )

[node name="CrateDetectorLeft" type="RayCast2D" parent="."]
enabled = true
cast_to = Vector2( -50, 0 )

[node name="Area2D" type="Area2D" parent="."]
collision_layer = 0
collision_mask = 24

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 4 )

[connection signal="area_entered" from="Area2D" to="States/Normal" method="_on_Area2D_area_entered"]
